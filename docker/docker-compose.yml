---
version: '3'
services:
    # Web Container (talks to nginx-proxy)
    # The virtual host environment line allows nginx-proxy to know which domain
    # to proxy to which container.
    # Additionally, other networks can be registered (databases needed)
    expense-report-web:
        image: nginx:latest
        container_name: expense_report_web
        tty: true
        environment:
            VIRTUAL_HOST: expense.docker
        volumes:
            - ../:/code
            - ./config/vhost.conf:/etc/nginx/conf.d/vhost.conf
        networks:
            - expense-network
    # PHP Container
    # The environment variables allow Xdebug to work properly.
    # Networks much like above can be registered depending on what the app
    # requires. In this case, MariaDB.
    expense-report-php:
        container_name: expense_report_php
        build: .
        environment:
            PHP_IDE_CONFIG: serverName=docker
            XDEBUG_CONFIG: remote_host=host.docker.internal
        ports:
          - '5173:5173'
        volumes:
            - ../:/code
        networks:
            - expense-network

    nginxproxy:
      image: jwilder/nginx-proxy
      container_name: expense_report_nginx_proxy
      ports:
        - "80:80"
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - ./proxy_increase.conf:/etc/nginx/proxy.conf
      networks:
        - expense-network

    postgres15:
        image: postgres:15
        container_name: expense_report_postgres15
        ports:
            - "5432:5432"
        environment:
             PGPASSWORD: root
             POSTGRES_USER: root
             POSTGRES_DB: expense_report
             POSTGRES_PASSWORD: postgres_pass
        volumes:   
            - expensedbdata:/var/lib/postgresql/data     
        networks:
            - expense-network
        command: "postgres
                -c logging_collector='on'
                -c log_directory='/var/log/postgresql'
                -c log_filename='%Y-%m-%d.log'
                -c log_line_prefix='%t %v '
                -c log_statement='all'"

    redis:
      image: redis
      container_name: redis
      restart: unless-stopped
      tty: true
      ports:
        - 6379:6379
      networks:
        - expense-network
# These are networks that you are leveraging from outside (external) locations.
# The dev-ops repo is already running, so that network (st-internal) exists.
networks:
  expense-network:
    driver: bridge

#Volumes
volumes:
  expensedbdata:
    driver: local
